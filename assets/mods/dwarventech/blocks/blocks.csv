"id";"drop";"spawn";"name";"shdr";"shdg";"shdb";"shduv";"str";"dsty";"mate";"solid";"wall";"grav";"dlfn";"fv";"fr";"lumr";"lumg";"lumb";"lumuv";"refl";"tags"


## Notes ##
#
# Every block must have a shade value that is at least as dark as the air block's
#
# Lava/Water props are left for future references, do not delete them until FluidCodex is built #
#
# id: Block ID. ID equal to or greater than 4096 is for fluids, mainly for lighting calculation.
# drop: Which item the DroppedItem actually adds to your inventory
# spawn: Which item the DroppedItem should impersonate when spawned
#
# Drop and World can point to the item from other modules (usually 'basegame')
# To achieve that, specify the full ID, e.g. basegame:32
# When no module ID is specified, the current module will be assumed.
#
# shdr/g/b, lumr/g/b: Shade RGB/ Lum RGB.
#    valid range: float of 0..4; 1.0 for 255
#
# solid: whether the tile has full collision (affects physics; flowers are not solid, glass is solid)
# clear: [PENDING FOR REMOVAL] whether the tile has trnasparency (affects render; flowers AND glass is clear)
#
# vscs: viscosity, (velocity) / (1 + (n/16)), 16 halves movement speed, can be used to non-fluid tiles (sticky hazard, tarmac road in Terraria)
#
# str: Strength of the block against the mining action. Larger value will make the block take longer time to be mined
#
# dsty: density. As we are putting water an 1000, it is identical to specific gravity. [g/l]
#
# dlfn: dynamic luminosity function.
#    0-static, 1-torch flicker, 2-current global light (sun, star, moon), 3-daylight at noon,
#    4-slow breath, 5-pulsate
#
# mate: material, four-letter code
#
# fv: vertical friction (boolean)
# fr: horizontal friction. 0: frictionless, <16: slippery, 16: regular, >16: sticky
#
# grav: Whether the block should fall through the empty space. N/A to not make it fall;
#       0 to fall immediately (e.g. Sand), nonzero to indicate that number of floating blocks can be supported (e.g. Scaffolding)
#
#
## Illuminators ##
#
# Illuminator white: Mercury Lamp; CIELAB of (94, -5.131, 10.613), which is made out of CIEXYZ of (0.947638, 1.146481, 0.482263), measured with ColorMunki Spectrometer (If you don't want green tinge, collect a daylight!)
# Illuminator orange: Sodium Lamp; CIE xy of (0.5375, 0.4153), CIEXYZ of (352.531139, 272.379377, 30.980339), measured with ColorMunki Spectrometer
# Defalut torch : Y 64 x 0.55183 y 0.40966 (Planckian ~1 770 K); real candlelight colour taken from Spyder5 colorimeter (for I couldn't afford i1DisplayPro/Colormunki -- at least back then!)
# Sunstone: Artificial sunlight, change colour over time in sync with sunlight. The light is set by game's code.
# Sunlight capacitor: daylight at noon. Set by game's code.
#
# BLOCK_ILLUMINATOR_CYAN is actually a SUPER_LUMINATOR, cyan colour is used as:
#   1. It has quite a brightness on RGB colour space
#   2. Helmholz-Kohlraush effect
#
#
## Tiles ##
#
# 16 colour palette : games's 16-colour palette
# Magical ice: theoretical __metallic__ ice that might form under super-high pressure (> 5 TPa). Its density is a wild guess.
#
#
## Actorblocks ##
#
# Actorblocks are virtual/placeholder blocks that accompanies actors (usually fixtures).
# Actorblocks are recognised by the "ACTORBLOCK" tag.
#
## Tags ##
#
# Tag(s) to the item which is used by the crafting system and the game's internals. Multiple tags are separated using commas.
# Each tag must be all uppercase and only [0-9A-Z] chars are supported.
#
### Internal Tags ##
##
## Some tags are reserved for internal use, which are:
## - INTERNAL: denotes that the tile is internal-use.
## - DORENDER: this internal tile must go through the standard-issue tile drawing routine.
## - INCONSEQUENTIAL: denotes that this tile can be overwritten without dropping it. Usually used with flower tiles.
#
#
## References ##
#
#     * Density of various woods : http://www.engineeringtoolbox.com/wood-density-d_40.html
#     * Density of various phases of ice : http://www1.lsbu.ac.uk/water/ice_phases.html
#
